{"version":3,"file":"index.js","sources":["../src/axios_params_convert.ts","../src/transform_to_form_data.ts","../src/index.ts"],"sourcesContent":["/*\n * @Description: axios 参数转换函数，抹平 get/post/application 间传参的差异性\n * @Type: function\n * @Author: Ben\n * @LastEditors: Please set LastEditors\n * @Date: 2019-05-05 18:04:27\n * @LastEditTime: 2019-05-09 16:02:59\n */\n\nimport qs from \"qs\";\n\nexport interface Params {\n  method: string;\n  url: string;\n  headers?: Record<string, any>;\n  data?: object;\n}\n\nexport default function axiosParamsConvert(params: Params) {\n  const res: Record<string, any> = {};\n\n  Object.keys(params).forEach(item => {\n    // NOTE: sign = true , 将 data => params\n    if (item === \"data\") {\n      if (params.method === \"GET\") {\n        res.params = params.data;\n      }\n      if (params.method === \"POST\") {\n        res.data = qs.stringify(params.data);\n      }\n      /* eslint-disable-next-line */\n    } else {\n      res[item] = params[item];\n    }\n  });\n\n  return res;\n}\n","/**\n * @description transform json Data to FormData\n * @param data\n */\n\nexport default function transformToFormData(data: Record<string, any>): FormData {\n  const formData = new FormData();\n  Object.keys(data).forEach(key => {\n    formData.append(key, data[key]);\n  });\n  return formData;\n}\n","import axios from 'axios';\nimport axiosParamsConvert from './axios_params_convert';\nimport transformToFormData from './transform_to_form_data';\nimport { BaseConfig, ReqConfig } from './type';\n\nexport default function chiliReqBase(config: BaseConfig) {\n  axios.defaults.baseURL = config.baseURL;\n\n  // NOTE:发送前拦截，用于获取 token 等...\n  if (config.interceptorReq) {\n    axios.interceptors.request.use(\n      request => {\n        // @ts-ignore\n        return config.interceptorReq(request);\n      },\n      error => {\n        // Do something with request error\n        return Promise.reject(error);\n      },\n    );\n  }\n\n  // NOTE:返回接口数据前拦截，用于token过期重置等\n  if (config.interceptorRes) {\n    axios.interceptors.response.use(\n      response => {\n        try {\n          // @ts-ignore\n          return config.interceptorRes(response);\n        } catch (error) {\n          throw error;\n        }\n      },\n      error => {\n        // Do something with response error\n        return Promise.reject(error);\n      },\n    );\n  }\n\n  return async <T>(regConfig: ReqConfig): Promise<T> => {\n    const paramCopy = axiosParamsConvert(regConfig.option);\n\n    // NOTE: formData 转换数据格式\n    if (\n      paramCopy.data &&\n      paramCopy.headers &&\n      paramCopy.headers['Content-Type'] === 'multipart/form-data'\n    ) {\n      paramCopy.data = transformToFormData(paramCopy.data);\n    }\n\n    let response = null;\n\n    try {\n      response = await axios(paramCopy);\n    } catch (error) {\n      throw error;\n    }\n\n    let { data } = response;\n    // NOTE: middle 转换数据\n    if (regConfig.middle) {\n      data = regConfig.middle(data);\n    }\n\n    return data as T;\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AASA,SASwB,kBAAkB,CAAC,MAAc;IACvD,IAAM,GAAG,GAAwB,EAAE,CAAC;IAEpC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;;QAE9B,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,MAAM,CAAC,MAAM,KAAK,KAAK,EAAE;gBAC3B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;gBAC5B,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACtC;;SAEF;aAAM;YACL,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;KACF,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;CACZ;;ACrCD;;;;AAKA,SAAwB,mBAAmB,CAAC,IAAyB;IACnE,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;QAC3B,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KACjC,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;CACjB;;SCNuB,YAAY,CAAC,MAAkB;IAAvD,iBA+DC;IA9DC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;;IAGxC,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAC5B,UAAA,OAAO;;YAEL,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SACvC,EACD,UAAA,KAAK;;YAEH,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,CACF,CAAC;KACH;;IAGD,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC7B,UAAA,QAAQ;YACN,IAAI;;gBAEF,OAAO,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;aACxC;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;SACF,EACD,UAAA,KAAK;;YAEH,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,CACF,CAAC;KACH;IAED,OAAO,UAAU,SAAoB;;;;;oBAC7B,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;oBAGvD,IACE,SAAS,CAAC,IAAI;wBACd,SAAS,CAAC,OAAO;wBACjB,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,qBAAqB,EAC3D;wBACA,SAAS,CAAC,IAAI,GAAG,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;qBACtD;oBAEG,QAAQ,GAAG,IAAI,CAAC;;;;oBAGP,qBAAM,KAAK,CAAC,SAAS,CAAC,EAAA;;oBAAjC,QAAQ,GAAG,SAAsB,CAAC;;;;oBAElC,MAAM,OAAK,CAAC;;oBAGR,IAAI,GAAK,QAAQ,KAAb,CAAc;;oBAExB,IAAI,SAAS,CAAC,MAAM,EAAE;wBACpB,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBAC/B;oBAED,sBAAO,IAAS,EAAC;;;SAClB,CAAC;CACH;;;;"}