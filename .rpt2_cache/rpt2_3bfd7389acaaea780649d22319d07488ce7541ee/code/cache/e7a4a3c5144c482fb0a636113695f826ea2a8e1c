{"code":"import { __awaiter, __generator } from \"tslib\";\r\nimport axios from 'axios';\r\nimport axiosParamsConvert from './axios_params_convert';\r\nimport transformToFormData from './transform_to_form_data';\r\nexport default function chiliReqBase(config) {\r\n    var _this = this;\r\n    axios.defaults.baseURL = config.baseURL;\r\n    // NOTE:发送前拦截，用于获取 token 等...\r\n    if (config.interceptorReq) {\r\n        axios.interceptors.request.use(function (request) {\r\n            // @ts-ignore\r\n            return config.interceptorReq(request);\r\n        }, function (error) {\r\n            // Do something with request error\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    // NOTE:返回接口数据前拦截，用于token过期重置等\r\n    if (config.interceptorRes) {\r\n        axios.interceptors.response.use(function (response) {\r\n            try {\r\n                // @ts-ignore\r\n                return config.interceptorRes(response);\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        }, function (error) {\r\n            // Do something with response error\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    return function (regConfig) { return __awaiter(_this, void 0, void 0, function () {\r\n        var paramCopy, response, error_1, data;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    paramCopy = axiosParamsConvert(regConfig.option);\r\n                    // NOTE: formData 转换数据格式\r\n                    if (paramCopy.data &&\r\n                        paramCopy.headers &&\r\n                        paramCopy.headers['Content-Type'] === 'multipart/form-data') {\r\n                        paramCopy.data = transformToFormData(paramCopy.data);\r\n                    }\r\n                    response = null;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, axios(paramCopy)];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    error_1 = _a.sent();\r\n                    throw error_1;\r\n                case 4:\r\n                    data = response.data;\r\n                    // NOTE: middle 转换数据\r\n                    if (regConfig.middle) {\r\n                        data = regConfig.middle(data);\r\n                    }\r\n                    return [2 /*return*/, data];\r\n            }\r\n        });\r\n    }); };\r\n}\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,kBAAkB,MAAM,wBAAwB,CAAC;AACxD,OAAO,mBAAmB,MAAM,0BAA0B,CAAC;AAG3D,MAAM,CAAC,OAAO,UAAU,YAAY,CAAC,MAAkB;IAAvD,iBA+DC;IA9DC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAExC,6BAA6B;IAC7B,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAC5B,UAAA,OAAO;YACL,aAAa;YACb,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,EACD,UAAA,KAAK;YACH,kCAAkC;YAClC,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CACF,CAAC;KACH;IAED,8BAA8B;IAC9B,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC7B,UAAA,QAAQ;YACN,IAAI;gBACF,aAAa;gBACb,OAAO,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;aACxC;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,EACD,UAAA,KAAK;YACH,mCAAmC;YACnC,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CACF,CAAC;KACH;IAED,OAAO,UAAU,SAAoB;;;;;oBAC7B,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBAEvD,wBAAwB;oBACxB,IACE,SAAS,CAAC,IAAI;wBACd,SAAS,CAAC,OAAO;wBACjB,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,qBAAqB,EAC3D;wBACA,SAAS,CAAC,IAAI,GAAG,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;qBACtD;oBAEG,QAAQ,GAAG,IAAI,CAAC;;;;oBAGP,qBAAM,KAAK,CAAC,SAAS,CAAC,EAAA;;oBAAjC,QAAQ,GAAG,SAAsB,CAAC;;;;oBAElC,MAAM,OAAK,CAAC;;oBAGR,IAAI,GAAK,QAAQ,KAAb,CAAc;oBACxB,oBAAoB;oBACpB,IAAI,SAAS,CAAC,MAAM,EAAE;wBACpB,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBAC/B;oBAED,sBAAO,IAAS,EAAC;;;SAClB,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/ben/Documents/w/code/myproject/package/chili-request/index.d.ts","writeByteOrderMark":false,"text":"import { BaseConfig, ReqConfig } from './type';\r\nexport default function chiliReqBase(config: BaseConfig): <T>(regConfig: ReqConfig) => Promise<T>;\r\n"}}
